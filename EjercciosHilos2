package threads;

public class HiloJoin1R implements Runnable {

	   
    private int numero=1000;
    private int numveces;
    private String operacion;

    public HiloJoin1R(int numveces, String operacion)
    {
        this.numveces=numveces;
        this.operacion=operacion;
    }

    public int incrementar (int numveces)
    {
        for (int i=1; i<=numveces;i++)
             numero++;
        return numero;
    }

    public int decrementar (int numveces)
    {
        for (int i=1; i<=numveces;i++)
            numero--;
        return numero;
    }

    //mÃ©todo run -> funcionalidad del hilo
	public void run() {
		
        int resultado=0;

        if (operacion=="+") resultado=incrementar(numveces);
        else if (operacion=="-") resultado=decrementar(numveces);
        
        System.out.println("Id "+ Thread.currentThread().getId()+ " Numero = "+ resultado);
	}
	
	public static void main(String [] args) {
		HiloJoin1R h1 = new HiloJoin1R(100, "+");
		HiloJoin1R h2 = new HiloJoin1R(100, "-");
		HiloJoin1R h3 = new HiloJoin1R(1, "+");
		HiloJoin1R h4 = new HiloJoin1R(1, "-");

		

	
		new Thread(h1).start();
		new Thread(h3).start();
		new Thread(h4).start();
		new Thread(h2).start();
		//new Thread(h2).setPriority(Thread.MIN_PRIORITY);
		try {
			new Thread(h2).join();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}	
		
	}
}
